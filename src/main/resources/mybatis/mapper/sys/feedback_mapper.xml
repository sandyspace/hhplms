<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haihua.hhplms.sys.mapper.FeedbackMapper">
  <resultMap id="feedbackMap" type="com.haihua.hhplms.sys.entity.Feedback">
    <id column="sid" property="sid" />
    <result column="title" property="title" />
    <result column="content" property="content" />
    <result column="contact" property="contact" />
    <result column="contact_mobile" property="contactMobile" />
    <result column="created_by" property="createdBy" />
    <result column="created_time" property="createdTime" />
    <result column="updated_by" property="updatedBy" />
    <result column="updated_time" property="updatedTime" />
    <result column="version_num" property="versionNum" />
  </resultMap>

  <sql id="columnClause">
    sid, title, content, contact, contact_mobile, created_by, created_time, updated_by, updated_time, version_num
  </sql>

  <insert id="create" parameterType="com.haihua.hhplms.sys.entity.Feedback" statementType="PREPARED" useGeneratedKeys="true" keyProperty="sid">
    insert into sys_feedback
    (title, content, contact, contact_mobile, created_by, created_time, version_num)
    values
    (#{title}, #{content}, #{contact}, #{contactMobile}, #{createdBy}, #{createdTime}, #{versionNum})
  </insert>

  <delete id="deleteByParams" parameterType="map" statementType="PREPARED">
    delete from sys_feedback
    <where>
      <if test="sid != null">
        sid = #{sid}
      </if>
    </where>
  </delete>

  <select id="countByParams" resultType="int" parameterType="map" statementType="PREPARED">
    select count(1)
    from sys_feedback
    <where>
      <if test="sid != null">
        sid = #{sid}
      </if>
      <if test="createdTimeFrom != null">
        <![CDATA[ and created_time >= #{createdTimeFrom} ]]>
      </if>
      <if test="createdTimeTo != null">
        <![CDATA[ and created_time <= #{createdTimeTo} ]]>
      </if>
      <if test="contactLike != null">
        and contact like concat(concat('%',#{contactLike}),'%')
      </if>
      <if test="contactMobileLike != null">
        and contact_mobile like concat(concat('%',#{contactMobileLike}),'%')
      </if>
    </where>
  </select>

  <select id="findByParams" resultMap="feedbackMap" parameterType="map" statementType="PREPARED">
    select <include refid="columnClause" />
    from sys_feedback
    <where>
      <if test="sid != null">
        sid = #{sid}
      </if>
      <if test="createdTimeFrom != null">
        <![CDATA[ and created_time >= #{createdTimeFrom} ]]>
      </if>
      <if test="createdTimeTo != null">
        <![CDATA[ and created_time <= #{createdTimeTo} ]]>
      </if>
      <if test="contactLike != null">
        and contact like concat(concat('%',#{contactLike}),'%')
      </if>
      <if test="contactMobileLike != null">
        and contact_mobile like concat(concat('%',#{contactMobileLike}),'%')
      </if>
    </where>
    order by created_time desc
    <if test="limit != null and offset != null">
      limit #{offset}, #{limit}
    </if>
  </select>
</mapper>